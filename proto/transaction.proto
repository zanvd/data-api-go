// The MIT License (MIT)

// Copyright (c) 2023 GateHub Limited

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

syntax = "proto3";

package proto;

option go_package="github.com/GateHubNet/data-api-go/internal/pb";

message Transaction {
  /*
   * The Ledger Index of the transaction.
   */
  int64 ledger_index = 1 [json_name='ledger_index']; // @gotags: cql:"ledger_index" redis:"ledger_index"

  int32 tx_index = 2 [json_name='tx_index']; // @gotags: cql:"tx_index" redis:"tx_index"

  string tx_type = 3 [json_name="tx_type"]; // @gotags: cql:"tx_type" redis:"tx_type"

  int64 sequence = 4 [json_name='sequence']; // @gotags: cql:"sequence" redis:"sequence"

  string account = 5 [json_name='account']; // @gotags: cql:"account" redis:"account"

  string ctid = 6 [json_name='ctid']; // @gotags: cql:"ctid" redis:"ctid"

  int32 fee = 7 [json_name='fee']; // @gotags: cql:"fee" redis:"fee"

  uint64 flags = 8 [json_name='flags']; // @gotags: cql:"flags" redis:"flags"

  string hash = 9 [json_name='hash']; // @gotags: cql:"hash" redis:"hash"

  string meta = 10 [json_name='meta']; // @gotags: cql:"hash" redis:"hash"

  uint32 result = 11 [json_name='result']; // @gotags: cql:"result" redis:"result"

  int64 timestamp = 12 [json_name='timestamp']; // @gotags: cql:"timestamp" redis:"timestamp"

  string tx = 13 [json_name='tx']; // @gotags: cql:"tx" redis:"tx"
}