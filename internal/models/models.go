// Code generated by "gocqlx/cmd/schemagen"; DO NOT EDIT.

package models

import (
	"github.com/scylladb/gocqlx/v2/table"
	"time"
)

// Table models.
var (
	Accounts = table.New(table.Metadata{
		Name: "accounts",
		Columns: []string{
			"account",
			"client",
			"initial_balance",
			"ledger_index",
			"parent",
			"timestamp",
			"tx_hash",
			"tx_index",
		},
		PartKey: []string{
			"ledger_index",
		},
		SortKey: []string{
			"tx_index",
		},
	})

	AccountsAccountIndexIndex = table.New(table.Metadata{
		Name: "accounts_account_index_index",
		Columns: []string{
			"account",
			"idx_token",
			"ledger_index",
			"tx_index",
		},
		PartKey: []string{
			"account",
		},
		SortKey: []string{
			"idx_token",
			"ledger_index",
			"tx_index",
		},
	})

	AccountsParentIndexIndex = table.New(table.Metadata{
		Name: "accounts_parent_index_index",
		Columns: []string{
			"idx_token",
			"ledger_index",
			"parent",
			"tx_index",
		},
		PartKey: []string{
			"parent",
		},
		SortKey: []string{
			"idx_token",
			"ledger_index",
			"tx_index",
		},
	})

	BalanceChanges = table.New(table.Metadata{
		Name: "balance_changes",
		Columns: []string{
			"account",
			"change",
			"change_type",
			"counterparty",
			"currency",
			"final_balance",
			"ledger_index",
			"node_index",
			"timestamp",
			"tx_hash",
			"tx_index",
		},
		PartKey: []string{
			"ledger_index",
		},
		SortKey: []string{
			"tx_index",
			"node_index",
		},
	})

	BalanceChangesAccountIndexIndex = table.New(table.Metadata{
		Name: "balance_changes_account_index_index",
		Columns: []string{
			"account",
			"idx_token",
			"ledger_index",
			"node_index",
			"tx_index",
		},
		PartKey: []string{
			"account",
		},
		SortKey: []string{
			"idx_token",
			"ledger_index",
			"tx_index",
			"node_index",
		},
	})

	BalanceChangesTxHashIndexIndex = table.New(table.Metadata{
		Name: "balance_changes_tx_hash_index_index",
		Columns: []string{
			"idx_token",
			"ledger_index",
			"node_index",
			"tx_hash",
			"tx_index",
		},
		PartKey: []string{
			"tx_hash",
		},
		SortKey: []string{
			"idx_token",
			"ledger_index",
			"tx_index",
			"node_index",
		},
	})

	DailyLedgers = table.New(table.Metadata{
		Name: "daily_ledgers",
		Columns: []string{
			"close_time",
			"ledger_close_day",
			"ledger_index",
		},
		PartKey: []string{
			"ledger_close_day",
		},
		SortKey: []string{
			"ledger_index",
			"close_time",
		},
	})

	Ledgers = table.New(table.Metadata{
		Name: "ledgers",
		Columns: []string{
			"account_hash",
			"close_flags",
			"close_time",
			"ledger_hash",
			"ledger_index",
			"ledger_processed",
			"parent_close_time",
			"parent_hash",
			"total_coins",
			"transaction_hash",
			"tx_count",
		},
		PartKey: []string{
			"ledger_index",
		},
		SortKey: []string{},
	})

	LedgersLedgerHashIndexIndex = table.New(table.Metadata{
		Name: "ledgers_ledger_hash_index_index",
		Columns: []string{
			"idx_token",
			"ledger_hash",
			"ledger_index",
		},
		PartKey: []string{
			"ledger_hash",
		},
		SortKey: []string{
			"idx_token",
			"ledger_index",
		},
	})

	MvAccountTransactions = table.New(table.Metadata{
		Name: "mv_account_transactions",
		Columns: []string{
			"account",
			"ctid",
			"fee",
			"flags",
			"hash",
			"ledger_index",
			"meta",
			"result",
			"sequence",
			"timestamp",
			"tx",
			"tx_index",
			"tx_type",
		},
		PartKey: []string{
			"account",
		},
		SortKey: []string{
			"sequence",
			"ledger_index",
			"tx_index",
			"tx_type",
		},
	})

	MvLedgerTransactionType = table.New(table.Metadata{
		Name: "mv_ledger_transaction_type",
		Columns: []string{
			"account",
			"ctid",
			"fee",
			"flags",
			"hash",
			"ledger_index",
			"meta",
			"result",
			"sequence",
			"timestamp",
			"tx",
			"tx_index",
			"tx_type",
		},
		PartKey: []string{
			"ledger_index",
		},
		SortKey: []string{
			"tx_type",
			"tx_index",
			"sequence",
		},
	})

	MvPaymentDestinationCurrency = table.New(table.Metadata{
		Name: "mv_payment_destination_currency",
		Columns: []string{
			"amount",
			"delivered_amount",
			"destination",
			"destination_currency",
			"destination_currency_issuer",
			"destination_tag",
			"ledger_index",
			"source",
			"source_currency",
			"source_currency_issuer",
			"source_tag",
			"timestamp",
			"transaction_cost",
			"tx_hash",
			"tx_index",
		},
		PartKey: []string{
			"destination_currency_issuer",
		},
		SortKey: []string{
			"destination_currency",
			"source_currency_issuer",
			"ledger_index",
			"tx_index",
		},
	})

	Payments = table.New(table.Metadata{
		Name: "payments",
		Columns: []string{
			"amount",
			"delivered_amount",
			"destination",
			"destination_currency",
			"destination_currency_issuer",
			"destination_tag",
			"ledger_index",
			"source",
			"source_currency",
			"source_currency_issuer",
			"source_tag",
			"timestamp",
			"transaction_cost",
			"tx_hash",
			"tx_index",
		},
		PartKey: []string{
			"ledger_index",
		},
		SortKey: []string{
			"tx_index",
			"destination_currency_issuer",
			"source_currency_issuer",
		},
	})

	PaymentsDestinationIndexIndex = table.New(table.Metadata{
		Name: "payments_destination_index_index",
		Columns: []string{
			"destination",
			"destination_currency_issuer",
			"idx_token",
			"ledger_index",
			"source_currency_issuer",
			"tx_index",
		},
		PartKey: []string{
			"destination",
		},
		SortKey: []string{
			"idx_token",
			"ledger_index",
			"tx_index",
			"destination_currency_issuer",
			"source_currency_issuer",
		},
	})

	PaymentsSourceIndexIndex = table.New(table.Metadata{
		Name: "payments_source_index_index",
		Columns: []string{
			"destination_currency_issuer",
			"idx_token",
			"ledger_index",
			"source",
			"source_currency_issuer",
			"tx_index",
		},
		PartKey: []string{
			"source",
		},
		SortKey: []string{
			"idx_token",
			"ledger_index",
			"tx_index",
			"destination_currency_issuer",
			"source_currency_issuer",
		},
	})

	PaymentsTxHashIndexIndex = table.New(table.Metadata{
		Name: "payments_tx_hash_index_index",
		Columns: []string{
			"destination_currency_issuer",
			"idx_token",
			"ledger_index",
			"source_currency_issuer",
			"tx_hash",
			"tx_index",
		},
		PartKey: []string{
			"tx_hash",
		},
		SortKey: []string{
			"idx_token",
			"ledger_index",
			"tx_index",
			"destination_currency_issuer",
			"source_currency_issuer",
		},
	})

	Transactions = table.New(table.Metadata{
		Name: "transactions",
		Columns: []string{
			"account",
			"ctid",
			"fee",
			"flags",
			"hash",
			"ledger_index",
			"meta",
			"result",
			"sequence",
			"timestamp",
			"tx",
			"tx_index",
			"tx_type",
		},
		PartKey: []string{
			"ledger_index",
		},
		SortKey: []string{
			"tx_index",
			"tx_type",
			"sequence",
		},
	})

	TransactionsCtidIndexIndex = table.New(table.Metadata{
		Name: "transactions_ctid_index_index",
		Columns: []string{
			"ctid",
			"idx_token",
			"ledger_index",
			"sequence",
			"tx_index",
			"tx_type",
		},
		PartKey: []string{
			"ctid",
		},
		SortKey: []string{
			"idx_token",
			"ledger_index",
			"tx_index",
			"tx_type",
			"sequence",
		},
	})

	TransactionsHashIndexIndex = table.New(table.Metadata{
		Name: "transactions_hash_index_index",
		Columns: []string{
			"hash",
			"idx_token",
			"ledger_index",
			"sequence",
			"tx_index",
			"tx_type",
		},
		PartKey: []string{
			"hash",
		},
		SortKey: []string{
			"idx_token",
			"ledger_index",
			"tx_index",
			"tx_type",
			"sequence",
		},
	})
)

type AccountsStruct struct {
	Account        string
	Client         string
	InitialBalance string
	LedgerIndex    int64
	Parent         string
	Timestamp      time.Time
	TxHash         string
	TxIndex        int64
}
type AccountsAccountIndexIndexStruct struct {
	Account     string
	IdxToken    int64
	LedgerIndex int64
	TxIndex     int64
}
type AccountsParentIndexIndexStruct struct {
	IdxToken    int64
	LedgerIndex int64
	Parent      string
	TxIndex     int64
}
type BalanceChangesStruct struct {
	Account      string
	Change       string
	ChangeType   string
	Counterparty string
	Currency     string
	FinalBalance string
	LedgerIndex  int64
	NodeIndex    int64
	Timestamp    time.Time
	TxHash       string
	TxIndex      int64
}
type BalanceChangesAccountIndexIndexStruct struct {
	Account     string
	IdxToken    int64
	LedgerIndex int64
	NodeIndex   int64
	TxIndex     int64
}
type BalanceChangesTxHashIndexIndexStruct struct {
	IdxToken    int64
	LedgerIndex int64
	NodeIndex   int64
	TxHash      string
	TxIndex     int64
}
type DailyLedgersStruct struct {
	CloseTime      time.Time
	LedgerCloseDay time.Time
	LedgerIndex    int64
}
type LedgersStruct struct {
	AccountHash     string
	CloseFlags      int32
	CloseTime       time.Time
	LedgerHash      string
	LedgerIndex     int64
	LedgerProcessed bool
	ParentCloseTime time.Time
	ParentHash      string
	TotalCoins      int64
	TransactionHash string
	TxCount         int64
}
type LedgersLedgerHashIndexIndexStruct struct {
	IdxToken    int64
	LedgerHash  string
	LedgerIndex int64
}
type MvAccountTransactionsStruct struct {
	Account     string
	Ctid        string
	Fee         int64
	Flags       int64
	Hash        string
	LedgerIndex int64
	Meta        []byte
	Result      int16
	Sequence    int64
	Timestamp   time.Time
	Tx          []byte
	TxIndex     int64
	TxType      string
}
type MvLedgerTransactionTypeStruct struct {
	Account     string
	Ctid        string
	Fee         int64
	Flags       int64
	Hash        string
	LedgerIndex int64
	Meta        []byte
	Result      int16
	Sequence    int64
	Timestamp   time.Time
	Tx          []byte
	TxIndex     int64
	TxType      string
}
type MvPaymentDestinationCurrencyStruct struct {
	Amount                    string
	DeliveredAmount           string
	Destination               string
	DestinationCurrency       string
	DestinationCurrencyIssuer string
	DestinationTag            int64
	LedgerIndex               int64
	Source                    string
	SourceCurrency            string
	SourceCurrencyIssuer      string
	SourceTag                 int64
	Timestamp                 time.Time
	TransactionCost           int64
	TxHash                    string
	TxIndex                   int64
}
type PaymentsStruct struct {
	Amount                    string
	DeliveredAmount           string
	Destination               string
	DestinationCurrency       string
	DestinationCurrencyIssuer string
	DestinationTag            int64
	LedgerIndex               int64
	Source                    string
	SourceCurrency            string
	SourceCurrencyIssuer      string
	SourceTag                 int64
	Timestamp                 time.Time
	TransactionCost           int64
	TxHash                    string
	TxIndex                   int64
}
type PaymentsDestinationIndexIndexStruct struct {
	Destination               string
	DestinationCurrencyIssuer string
	IdxToken                  int64
	LedgerIndex               int64
	SourceCurrencyIssuer      string
	TxIndex                   int64
}
type PaymentsSourceIndexIndexStruct struct {
	DestinationCurrencyIssuer string
	IdxToken                  int64
	LedgerIndex               int64
	Source                    string
	SourceCurrencyIssuer      string
	TxIndex                   int64
}
type PaymentsTxHashIndexIndexStruct struct {
	DestinationCurrencyIssuer string
	IdxToken                  int64
	LedgerIndex               int64
	SourceCurrencyIssuer      string
	TxHash                    string
	TxIndex                   int64
}
type TransactionsStruct struct {
	Account     string
	Ctid        string
	Fee         int64
	Flags       int64
	Hash        string
	LedgerIndex int64
	Meta        []byte
	Result      int16
	Sequence    int64
	Timestamp   time.Time
	Tx          []byte
	TxIndex     int64
	TxType      string
}
type TransactionsCtidIndexIndexStruct struct {
	Ctid        string
	IdxToken    int64
	LedgerIndex int64
	Sequence    int64
	TxIndex     int64
	TxType      string
}
type TransactionsHashIndexIndexStruct struct {
	Hash        string
	IdxToken    int64
	LedgerIndex int64
	Sequence    int64
	TxIndex     int64
	TxType      string
}
